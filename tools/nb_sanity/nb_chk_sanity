#!/home/benpeng/nbifweb_client/software/node/bin/node
let querystring     = require('querystring');
let http            = require('http');
let process         = require('process');
let fs              = require('fs');
let child_process   = require('child_process');

let testlist  =[];

const { program }   = require('commander');
program
 .option('-t, --testlist <type>', 'testlist')
 .option('-s, --shelve <type>', 'shelve id')
 .option('-c, --codeline <type>', 'codeline')
 .option('-u, --username <type>', 'username')
 .option('-b, --branch_name <type>', 'branch_name')
 .option('-l, --changelist <type>', 'changelist')
 .option('-r, --treeRoot <type>', 'treeRoot')
 .option('-h, --hostname <type>', 'hostname')
 .option('-cid, --configuration_id <type>', 'hostname');
program.parse(process.argv);
if(program.testlist)  {
  testlist  = program.testlist.split(',');
}
let regx01;
//To get username
let username;
if(program.username){
  username  = program.username;
}
else{
  username  = child_process.execSync('whoami',{
    encoding  : 'utf8'
  });
  regx01  = /^(\w+)/;
  username.replace(regx01,function(rs,$1){
    console.log('username :'+$1);
    username  = $1;
  });
}
//To get hostname
let hostname;
if(program.hostname){
  hostname  = program.hostname;
}
else{
  hostname = child_process.execSync('hostname',{
    encoding  : 'utf8'
  });
  regx01  = /^(\w+)/;
  hostname.replace(regx01,function(rs,$1){
    console.log('hostname :'+$1);
    hostname  = $1;
  });
}
//To get treeRoot
let treeRoot;
if(program.treeRoot){
  treeRoot  = program.treeRoot;
}
else{
  treeRoot = child_process.execSync('pwd',{
    encoding  : 'utf8'
  });
  regx01  = /^(\S+)/;
  treeRoot.replace(regx01,function(rs,$1){
    console.log('treeRoot :'+$1);
    treeRoot  = $1;
  });
}
//To get codeline branch_name
let codeline;
let branch_name;
let changelist;
if(!fs.existsSync(treeRoot+'/configuration_id')){
  throw "need correct treeRoot setting";
}
let lines = fs.readFileSync(treeRoot+'/configuration_id','utf8').split('\n');
lines.pop();
regx01  =/(\w+)\/(\w+)@(\w+)/;
lines[0].replace(regx01,function(rs,$1,$2,$3){
  codeline  = $1;
  branch_name = $2;
  changelist  = $3;
  if(program.codeline){
    codeline  = program.codeline;
  }
  if(program.branch_name){
    branch_name = program.branch_name;
  }
  if(program.changelist){
    changelist  = program.changelist;
  }
});
console.log('input testlist :'+testlist);

let postData = querystring.stringify({
  'treeRoot'  : treeRoot,
  'username'  : username,
  'hostname'  : hostname,
  'shelve'    : program.shelve,
  'codeline'  : codeline,
  'branch_name': branch_name,
  'changelist': changelist,
  'testlist'  : JSON.stringify(testlist)
});

let options = {
  hostname: 'srdcws808',
  port: 9001,
  path: '/sanity/check',
  method: 'POST',
  headers: {
    'Content-Type': 'application/x-www-form-urlencoded',
    'Content-Length': Buffer.byteLength(postData)
  }
};

let req = http.request(options, (res) => {
  //console.log(`STATUS: ${res.statusCode}`);
  //console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
  res.setEncoding('utf8');
  res.on('data', (chunk) => {
    //console.log(`BODY: ${chunk}`);
  });
  res.on('end', () => {
    console.log('done.');
  });
});

req.on('error', (e) => {
  console.error(`problem with request: ${e.message}`);
});

// Write data to request body
req.write(postData);
req.end();
